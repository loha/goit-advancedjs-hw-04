import{a as y,S as v,i as S}from"./assets/vendor-B6jJ9_I0.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const m of s.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&i(m)}).observe(document,{childList:!0,subtree:!0});function t(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=t(o);fetch(o.href,s)}})();const q="47642330-01773e177615e156ed5ec02c5";y.defaults.baseURL="https://pixabay.com/api/";const p=async(e,r=1,t=20)=>{try{return(await y.get("/",{params:{key:q,q:e,image_type:"photo",orientation:"horizontal",safesearch:"true",page:r,per_page:t}})).data}catch(i){console.error(i)}},b=e=>`
        <li class="image-card">
            <a href="${e.largeImageURL}" target="_blank">
                <img src="${e.webformatURL}" alt="${e.tags}" loading="lazy" />
                <div class="image-info">
                    <p><b>Likes</b> ${e.likes}</p>
                    <p><b>Views</b> ${e.views}</p>
                    <p><b>Comments</b> ${e.comments}</p>
                    <p><b>Downloads</b> ${e.downloads}</p>
                </div>
            </a>
        </li>
    `,I=e=>{const r=document.querySelector(".gallery");r.innerHTML="";const t=e.map(b).join("");r.insertAdjacentHTML("beforeend",t)},M=e=>{const r=document.querySelector(".gallery"),t=e.map(b).join("");r.insertAdjacentHTML("beforeend",t)},P=document.querySelector("#search-bar-form"),f=document.querySelector("body > .loader"),d=document.querySelector("#btn-load-more"),g=document.querySelector(".load-more-block .loader");let n=1,u=15,h,c;const a=(e,r,t)=>{e.classList.toggle(r,t)},w=e=>!e.hits||!e.hits.length,L=(e,r,t)=>e*r<t,l=(e,r)=>{S[e]({message:r,position:"topRight"})},$=()=>{const e=document.querySelector(".image-card"),{height:r}=e.getBoundingClientRect();window.scrollBy({top:r*2,behavior:"smooth"})},O=async e=>{e.preventDefault();try{if(c=e.target.elements.search.value,c.trim().length===0)return;a(d,"show",!1),a(f,"is-active",!0),n=1;const t=await p(c,n,u);w(t)&&l("error","Sorry, there are no images matching your search query. Please try again!"),I(t.hits),L(n,u,t.totalHits)&&a(d,"show",!0),h=new v(".gallery a",{captionsData:"alt",captionDelay:250}),h.refresh()}catch(r){console.error(r),l("error",r.message)}finally{a(f,"is-active",!1)}},x=async e=>{try{if(!c||c.trim().length===0)return;n+=1,a(d,"show",!1),a(g,"is-active",!0);const r=await p(c,n,u);w(r)&&l("error","Sorry, there are no images matching your search query. Please try again!"),M(r.hits),$(),L(n,u,r.totalHits)?a(d,"show",!0):l("info","We're sorry, but you've reached the end of search results."),h.refresh()}catch(r){console.error(r),l("error",r.message)}finally{a(g,"is-active",!1)}};P.addEventListener("submit",O);d.addEventListener("click",x);
//# sourceMappingURL=index.js.map
